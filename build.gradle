plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT' //'1.8-SNAPSHOT' for 1.21.2
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven { url "https://maven.shedaniel.me" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
        content {
            includeGroup 'io.github.ladysnake'
            includeGroupByRegex 'io\\.github\\.onyxstudios.*'
        }
    }
    maven {
        name = 'TerraformersMC'
        url = 'https://maven.terraformersmc.com/'
    }
    maven { url = 'https://maven.minecraftforge.net/' }
    maven { url = "https://maven.kyrptonaught.dev" }
    maven { url 'https://jitpack.io' }

    maven { url = "https://api.modrinth.com/maven" }

    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

//loom {
//    splitEnvironmentSourceSets()
//    mods {
//        "${archives_base_name}" {
//            sourceSet sourceSets.main
//            sourceSet sourceSets.client
//        }
//    }
//}

fabricApi {
    configureDataGeneration()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Energy API Handling Dependency <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    //include modApi("teamreborn:energy:${project.energy_version}") {
    //    exclude(group: "net.fabricmc.fabric-api")
    //}

    // PAL <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    modImplementation "io.github.ladysnake:PlayerAbilityLib:${project.pal_version}"
    include "io.github.ladysnake:PlayerAbilityLib:${project.pal_version}"

    // LibGUI <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    //modImplementation include("io.github.cottonmc:LibGui:${project.libgui_version}")

    // Terra Former Wood: Needed for Sign and Boat <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    //modImplementation "com.terraformersmc.terraform-api:terraform-wood-api-v1:${project.terraform_version}"
    //include "com.terraformersmc.terraform-api:terraform-wood-api-v1:${project.terraform_version}"

    // Kyrptonaught <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    //modImplementation "net.kyrptonaught:customportalapi:${project.kyrptonaught_version}"
    //include "net.kyrptonaught:customportalapi:${project.kyrptonaught_version}"

    // EMI Compatibility <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    //modCompileOnly "dev.emi:emi-fabric:${emi_version}:api"

    // REI Compatibility <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    //modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    //modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

    // JEI Compatibility <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    //modCompileOnlyApi("mezz.jei:jei-${project.jei_mc_version}-fabric-api:${project.jei_version}")
    //modRuntimeOnly("mezz.jei:jei-${project.jei_mc_version}-fabric:${project.jei_version}")

    // Jade
    modImplementation "curse.maven:jade-324717:${project.jade_version}"

    // Mod Menu
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")

    // Mod Menu Badges Lib <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    include(modImplementation("maven.modrinth:modmenu-badges-lib:${badges_lib_version}"))

    // Fluid Utils:Needed for Fluid Handling
    //modImplementation include("com.github.drkhodakarami:fluidutils:${project.fluidutils_version}")

    // Cloth Config
    //modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
    //    exclude(group: "net.fabricmc.fabric-api")
    //}

    // Architectury
    //modApi "dev.architectury:architectury-fabric:${project.architectury_version}"

    // TerraBlender
    //modImplementation "com.github.glitchfiend:TerraBlender-fabric:${project.terrablender_mc_version}-${project.terrablender_version}"

    // Tech Reborn Runtime Only
    //modRuntimeOnly("curse.maven:reborncore-237903:${project.reborn_curse_version}")
    //modRuntimeOnly("curse.maven:techreborn-233564:${project.tech_reborn_version}")

    // EMI Runtime Only
    //modLocalRuntime "dev.emi:emi-fabric:${emi_version}"

    // REI Runtime Only
    //modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

    // JEI Runtime Only
    //modRuntimeOnly("mezz.jei:jei-${project.jei_mc_version}-fabric:${project.jei_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
    }
}

tasks.create("checkVersionFileValidation") {
    doFirst {
        File testFile = new File("${remapJar.archiveFile.get()}")
        if (testFile.isFile()) {
            throw new GradleException("project version is built before, change the project version >>> ${project.mod_version}")
        } else {
            println "Project version needs building >>> ${project.archives_base_name}-${project.mod_version}"
        }
    }
}

compileJava.dependsOn checkVersionFileValidation